#!/bin/bash

# Script para configurar y cargar datos en MongoDB
# Este script espera a que MongoDB est√© listo y luego carga los datos iniciales

echo "üöÄ Configurando base de datos Real Estate..."

# Funci√≥n para verificar si MongoDB est√° listo
wait_for_mongodb() {
    echo "‚è≥ Esperando a que MongoDB est√© listo..."
    
    max_attempts=30
    attempt=1
    
    while [ $attempt -le $max_attempts ]; do
        if docker exec realestate-mongodb mongosh --eval "db.adminCommand('ping')" --quiet > /dev/null 2>&1; then
            echo "‚úÖ MongoDB est√° listo!"
            return 0
        fi
        
        echo "   Intento $attempt/$max_attempts - MongoDB no est√° listo a√∫n..."
        sleep 2
        ((attempt++))
    done
    
    echo "‚ùå Error: MongoDB no respondi√≥ despu√©s de $max_attempts intentos"
    return 1
}

# Funci√≥n para cargar datos
load_data() {
    echo "üìä Cargando datos iniciales..."
    
    # Copiar el script al contenedor
    docker cp scripts/load-data.js realestate-mongodb:/tmp/load-data.js
    
    # Ejecutar el script de carga de datos
    if docker exec realestate-mongodb mongosh --file /tmp/load-data.js; then
        echo "‚úÖ Datos cargados exitosamente!"
        return 0
    else
        echo "‚ùå Error al cargar los datos"
        return 1
    fi
}

# Funci√≥n para verificar si los datos ya existen
check_existing_data() {
    echo "üîç Verificando si ya existen datos..."
    
    owners_count=$(docker exec realestate-mongodb mongosh --eval "db.getSiblingDB('RealEstateDB').Owners.countDocuments()" --quiet 2>/dev/null | tail -1)
    properties_count=$(docker exec realestate-mongodb mongosh --eval "db.getSiblingDB('RealEstateDB').Properties.countDocuments()" --quiet 2>/dev/null | tail -1)
    
    if [ "$owners_count" -gt 0 ] || [ "$properties_count" -gt 0 ]; then
        echo "‚ö†Ô∏è  La base de datos ya contiene datos:"
        echo "   - Propietarios: $owners_count"
        echo "   - Propiedades: $properties_count"
        echo "   Saltando la carga de datos iniciales."
        return 1
    fi
    
    return 0
}

# Funci√≥n principal
main() {
    echo "üè† Real Estate Database Setup"
    echo "=============================="
    
    # Verificar si MongoDB est√° ejecut√°ndose
    if ! docker ps | grep -q realestate-mongodb; then
        echo "‚ùå Error: El contenedor de MongoDB no est√° ejecut√°ndose"
        echo "   Ejecuta primero: docker-compose up -d mongodb"
        exit 1
    fi
    
    # Esperar a que MongoDB est√© listo
    if ! wait_for_mongodb; then
        exit 1
    fi
    
    # Verificar si ya existen datos
    if check_existing_data; then
        # Cargar datos si no existen
        if load_data; then
            echo ""
            echo "üéâ ¬°Configuraci√≥n completada exitosamente!"
            echo "   La base de datos est√° lista para usar."
        else
            echo ""
            echo "‚ùå Error durante la configuraci√≥n"
            exit 1
        fi
    else
        echo ""
        echo "‚úÖ La base de datos ya est√° configurada"
    fi
    
    echo ""
    echo "üìã Informaci√≥n de conexi√≥n:"
    echo "   - Host: localhost"
    echo "   - Puerto: 27017"
    echo "   - Base de datos: RealEstateDB"
    echo "   - Usuario: admin"
    echo "   - Contrase√±a: password123"
}

# Ejecutar funci√≥n principal
main "$@"
